# Creating GPG encrypted values 
# other sources: https://fabianlee.org/2016/10/18/saltstack-keeping-salt-pillar-data-encrypted-using-gpg/

# X. install gpg
# yum install gnupg2

# 1. Setup the key home directory
# mkdir -p /etc/salt/gpgkeys
# chmod 0700 /etc/salt/gpgkeys
# vim /etc/salt/master.d/gpg.conf
# cp /etc/salt/master.d/gpg.conf /etc/salt/minion.d/gpg.conf
# gpg-agent --homedir=/etc/salt/gpgkeys/ --daemon

# 2. Generate your private key
# gpg --gen-key --homedir /etc/salt/gpgkeys
# Everything Defaults > Do not set a passphrase > Keep track of the name you use.
# gpg --homedir /etc/salt/gpgkeys --list-keys

# 3. Generate your public key. This can be shared with other people. 
# Replace "salt01" with the name you used.
# gpg --homedir /etc/salt/gpgkeys --armor --export salt01 > /etc/salt/gpgkeys/exported_pubkey.gpg

# 4. Encrypt a value and store it in a file.
# echo -n "secret-password" | gpg --homedir /etc/salt/gpgkeys --armor --batch --trust-model always --encrypt -r salt01 > /srv/pillar/password.sls

# 5. Add this to the top of the file. AND indent the Key portion two spaces. 
# #!jinja|yaml|gpg
# db_password: |
#
#   EXAMPLE:
#       #!jinja|yaml|gpg
#       default_password: |
#         -----BEGIN PGP MESSAGE-----
#         Version: GnuPG v2.0.22 (GNU/Linux)
#       
#         hIwDQWcNI9DFnAEBA/9VvxtLQmoICvB8H3wGUVVgYHQGnO/3Ut710dp+0Pivp7py
#         zQP/DG1UKN2RErPW9BtWts0LSNyCVP49DYmKSehEhcjEgaP2F8At/p6uF3xzJv9w
#         5bb7kUItQ1jOkuQjsd2tQHpSYJQHrA9He09vebH/Hwrkd8I9yk8UQ2peQ2bUEtJD
#         ARpqHHEk7LE71p9Atw5gEGnUAeEeL6XjZJfNIIzHeI++FBZeTKDBKXdi5XXCSQ8a
#         902FDvL24QAY5MGBPL7+py7sqw==
#         =5qJK
#         -----END PGP MESSAGE-----

# 6. Setup pilliar top so your minions have access to that pillar.
# vim /srv/pillar/top.sls
# 
#   base:
#     'minion*':
#       - password


# File: /etc/salt/master.d/gpg.conf
# Define the GPG key home directory
gpg_keydir: /etc/salt/gpgkeys